<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <LangVersion>12</LangVersion>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    
    <!-- Assembly Configuration -->
    <AssemblyName>Il2CppInspector.Common</AssemblyName>
    <RootNamespace>Il2CppInspector</RootNamespace>
    
    <!-- Library Packaging Configuration -->
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IsPackable>true</IsPackable>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    
    <!-- Package Metadata -->
    <PackageId>Il2CppInspector</PackageId>
    <Title>Il2CppInspector Library</Title>
    <Authors>Katy Coe</Authors>
    <Company>Noisy Cow Studios</Company>
    <Product>Il2CppInspector Library</Product>
    <Version>2024.1.0</Version>
    <AssemblyVersion>2024.1.0.0</AssemblyVersion>
    <FileVersion>2024.1.0.0</FileVersion>
    <Description>Unity IL2CPP application reverse engineering framework library for programmatic analysis of IL2CPP binaries and metadata. Supports extraction of type definitions, method signatures, and generation of C#, C++, and Python output.</Description>
    <Summary>Library for analyzing Unity IL2CPP applications and generating reverse engineering artifacts</Summary>
    <PackageProjectUrl>https://github.com/djkaty/Il2CppInspector</PackageProjectUrl>
    <PackageLicenseExpression>AGPL-3.0-only</PackageLicenseExpression>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <RepositoryUrl>https://github.com/djkaty/Il2CppInspector</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>IL2CPP;Unity;Reverse-Engineering;Metadata;Analysis;Library;Decompilation</PackageTags>
    <PackageReleaseNotes>Library-only version of Il2CppInspector for programmatic integration</PackageReleaseNotes>
    <Copyright>Copyright (c) 2024 Katy Coe</Copyright>
    
    <!-- Build Configuration -->
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|AnyCPU'">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <Optimize>true</Optimize>
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
    <Optimize>false</Optimize>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="Cpp\UnityHeaders\**" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="Cpp\UnityHeaders\**" />
    <EmbeddedResource Include="Cpp\Il2CppAPIHeaders\**" />
    <EmbeddedResource Include="Outputs\ScriptResources\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="dnlib" Version="4.4.0" />
    <PackageReference Include="McMaster.NETCore.Plugins" Version="1.4.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Include Bin2Object as a private asset that gets packaged with the library -->
    <ProjectReference Include="..\Bin2Object\Bin2Object\Bin2Object.csproj" PrivateAssets="all" />
    
    <!-- Include VersionedSerialization.Generator as an analyzer -->
    <ProjectReference Include="..\VersionedSerialization.Generator\VersionedSerialization.Generator.csproj" 
                      ReferenceOutputAssembly="false" 
                      OutputItemType="Analyzer" 
                      PrivateAssets="all" />
    
    <!-- Include VersionedSerialization as a packaged dependency -->
    <ProjectReference Include="..\VersionedSerialization\VersionedSerialization.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Properties\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

  <!-- Custom target to include project references in the NuGet package -->
  <Target DependsOnTargets="ResolveReferences" Name="CopyProjectReferencesToPackage">
    <ItemGroup>
      <!-- Include all project reference outputs in the package -->
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths-&gt;WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>

  <!-- Ensure analyzers are properly packaged -->
  <Target Name="GetAnalyzerPackFiles">
    <ItemGroup>
      <AnalyzerPackFile Include="@(Analyzer)" />
    </ItemGroup>
  </Target>

</Project>