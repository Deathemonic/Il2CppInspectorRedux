name: Branch Cleaner

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'Branch to clean (e.g., "native")'
        required: true
        type: string
      confirm_deletion:
        description: 'Type "CLEAN" to confirm you want to wipe the target branch'
        required: true
        type: string

jobs:
  clean-branch:
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate confirmation
      if: ${{ github.event.inputs.confirm_deletion != 'CLEAN' }}
      run: |
        echo "❌ Confirmation failed. You must type 'CLEAN' to proceed."
        exit 1
    
    - name: Validate branch name
      run: |
        TARGET="${{ github.event.inputs.target_branch }}"
        if [[ "$TARGET" == "main" || "$TARGET" == "master" ]]; then
          echo "❌ Cannot clean main/master branch for safety"
          exit 1
        fi
        echo "✅ Target branch: $TARGET"
    
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
    
    - name: Check if target branch exists
      run: |
        TARGET="${{ github.event.inputs.target_branch }}"
        
        if git show-ref --verify --quiet "refs/remotes/origin/$TARGET"; then
          echo "✅ Branch '$TARGET' exists remotely"
        elif git show-ref --verify --quiet "refs/heads/$TARGET"; then
          echo "✅ Branch '$TARGET' exists locally"
        else
          echo "ℹ️  Branch '$TARGET' doesn't exist. Will create it as a new clean branch."
        fi
    
    - name: Create/switch to target branch
      run: |
        TARGET="${{ github.event.inputs.target_branch }}"
        
        echo "🔄 Switching to branch: $TARGET"
        
        # Try to checkout existing branch, or create new orphan branch
        if git show-ref --verify --quiet "refs/remotes/origin/$TARGET"; then
          git checkout "$TARGET"
          echo "📝 Checked out existing branch '$TARGET'"
        else
          git checkout --orphan "$TARGET"
          echo "🆕 Created new orphan branch '$TARGET'"
        fi
    
    - name: Remove all files from target branch
      run: |
        echo "🧹 Cleaning all files from the target branch..."
        
        # Remove all files (git rm handles both tracked and staged files)
        git rm -rf . 2>/dev/null || true
        
        # Remove any remaining untracked files
        find . -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -rf {} + 2>/dev/null || true
        
        # Verify everything is gone
        echo "📋 Current directory contents:"
        ls -la
    
    - name: Create clean branch structure
      run: |
        TARGET="${{ github.event.inputs.target_branch }}"
        
        echo "📝 Creating clean structure for branch '$TARGET'..."
        
        # Create a basic README
        cat > README.md << EOF
        # Clean Branch: $TARGET
        
        This branch has been cleaned and is ready for a fresh start.
        
        ## Getting Started
        
        This is a clean slate - add your project files here!
        
        ---
        *Branch cleaned on $(date)*
        *Other branches remain untouched*
        EOF
        
        # Create a basic .gitignore
        cat > .gitignore << 'EOF'
        # OS generated files
        .DS_Store
        .DS_Store?
        ._*
        .Spotlight-V100
        .Trashes
        ehthumbs.db
        Thumbs.db
        
        # IDE files
        .vscode/
        .idea/
        *.swp
        *.swo
        *~
        
        # Logs
        *.log
        logs/
        
        # Dependencies
        node_modules/
        
        # Build outputs
        dist/
        build/
        EOF
    
    - name: Commit and push clean branch
      run: |
        TARGET="${{ github.event.inputs.target_branch }}"
        
        echo "💾 Committing clean branch..."
        
        # Stage all new files
        git add .
        
        # Create clean commit
        git commit -m "🧹 Clean branch reset
        
        Branch '$TARGET' cleaned and reset for fresh start.
        Other branches remain untouched.
        
        Generated by GitHub Actions on $(date)"
        
        # Force push the clean branch (since we're rewriting history)
        git push --force-with-lease origin "$TARGET"
        
        echo "✅ Clean branch '$TARGET' pushed successfully!"
    
    - name: Verify other branches are untouched
      run: |
        echo "🔍 Verifying other branches remain untouched..."
        
        # List all branches to confirm they still exist
        echo "📋 All branches in repository:"
        git branch -a
        
        # Switch back to main/master to verify it's intact
        git checkout main 2>/dev/null || git checkout master 2>/dev/null || echo "No main/master branch found"
        
        if [ $? -eq 0 ]; then
          echo "✅ Main branch is intact"
          echo "📁 Main branch contents:"
          ls -la | head -10
        fi
    
    - name: Summary
      run: |
        TARGET="${{ github.event.inputs.target_branch }}"
        
        echo "🎉 Branch cleaning completed!"
        echo ""
        echo "📊 Summary:"
        echo "- ✅ Branch '$TARGET' has been cleaned"
        echo "- ✅ All other branches remain untouched"
        echo "- ✅ Clean README.md and .gitignore added to '$TARGET'"
        echo ""
        echo "🔄 Next steps:"
        echo "1. Clone only the clean branch: git clone -b $TARGET <your-repo-url>"
        echo "2. Or switch to it: git checkout $TARGET"
        echo "3. Start adding your new project files"
        echo ""
        echo "ℹ️  Your main branch and all other branches are completely safe!"
